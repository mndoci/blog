---
title: Python vs Ruby Testing Cultures: A Survey
kind: article
author: Vincent Driessen
created_at: 2010-11-15
updated_at: 2010-11-15
published: false
---
In my spare time, I love to read up on many different topics that are
happening in the modern world of software development.  On many occasions, the
technologies that I find most interesting are happening in the Python and Ruby
communities.

I immediately have to admit that I'm not too actively involved in the Ruby
community yet.  It is a language that I don't have much "handson experience"
with.  Although I think the Ruby community is a bit more chaotic, it is also
more exciting than the Python community.  Ruby definitely got the more snazzy
and sexier appeal of the two, but I also think it's the more naive brother of
the two that gets in trouble (think drugs and jail) in its teen years.

I have always found it really hard to express what I dislike about Ruby.  In
my college years, I really enjoyed functional programming and I absolutely
adore the influences Ruby got from that world.  Solving programming problems
with the typical Ruby language constructs like blocks is very satisfying and
feels really elegant.  Next to that, Ruby makes a gorgeous language for
creating DSLs.

At the same time, the "magic" and the implicit behaviour is what gives me the
eerie feeling that I'm not in control.

Then, I stumbled upon this video by Gary Bernhardt: "Python vs Ruby: A Battle
to The Death":http://vimeo.com/9471538, and all the pieces of the puzzle fell
together for me.  He summarized exactly (and better!) what my feelings about
the two languages are.  Result: I love both and I hate both.

Especially the conclusions Gary draws about RSpec being the superiour
specification language is something I share.

