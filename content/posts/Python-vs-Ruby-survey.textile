---
title: "Survey: Python vs Ruby Testing Culture"
kind: article
author: Vincent Driessen
created_at: 2010-11-15
updated_at: 2010-11-15
published: false
image: py-vs-ruby.png
---
In my spare time, I love to read up on many different topics that are
happening in the modern world of software development.  On many occasions, the
technologies that I find most interesting are happening in the Python and Ruby
communities.

!(center)/img/2010/11/py-vs-ruby.png!

I immediately have to admit that I'm not too actively involved in the Ruby
community yet.  It is a language that I don't have much "handson experience"
with.  Although I think the Ruby community is a bit more chaotic than
Python's, I also believe that more exciting things are happening there.  Ruby
definitely got the more snazzy and sexier appeal of the two, but I also think
it's the more naive brother of the two that gets in trouble (think drugs and
jail) in its teen years.

I have always found it really hard to express what I dislike about Ruby.  In
my college years, I really enjoyed functional programming and I absolutely
adore the influences Ruby got from that world.  Solving programming problems
with the typical Ruby language constructs like blocks is very satisfying and
feels really elegant.  Next to that, Ruby makes a gorgeous language for
creating DSLs.

Yet, the "black magic" and the implicit behaviour give me the eerie feeling
that I'm not in control.

Then, I stumbled upon this video by Gary Bernhardt:

p(center). "Python vs Ruby: A Battle to The Death":http://vimeo.com/9471538

And all the pieces of the puzzle fell together for me.  He summarized exactly
(and better!) what my feelings about the two languages are.  Result: I love
both and I hate both.

Especially the conclusions Gary draws about RSpec being a superiour
specification language is something I share.  There simply is no good
equivalent of RSpec for Python, which is caused exactly by Python's lack of
blocks, and therefore, by its lack of DSL capabilities.

This made me think.  Does Ruby have a more mature testing culture?  If
I browse around interesting projects on Github, for example, I always get the
feeling that the Ruby projects have better tests and better coverage than the
Python ones (sorry, no scientific proof here).  But most importantly, the Ruby
culture seem to _care more_ about actually testing their code at all.
<small>&lt;bait&gt;Maybe this is _because_ of the magic in Ruby?
;)&lt;/bait&gt;</small>

At the same time, I get the feeling that the Ruby culture has _less_ testing
tools available.  Maybe this is because I simply don't know the Ruby community
as well as I know Python's, but maybe there has been a lot more consensus and
standardisation already.

This made me curious, so I decided to pull up a small survey and I invite all
Python and Ruby developers out there to take it.  After taking the survey you
can see the results so far, and I'll make sure to blog about any interesting
conclusions that can be drawn from the numbers that I will gather with this.
