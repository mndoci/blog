<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">

<head profile="http://gmpg.org/xfn/11">
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	
	<title>nvie.com  &raquo; Blog Archive   &raquo; Automatically generate classes for your Core Data data model</title>
	
	<link rel="alternate" type="application/rss+xml" title="nvie.com RSS Feed" href="http://nvie.com/feed" />
	<link rel="pingback" href="http://nvie.com/xmlrpc.php" />
	
	<link rel="stylesheet" href="http://nvie.com/wp-content/themes/librio/style.css" type="text/css" media="screen" />
	<!--[if IE]><link rel="stylesheet" type="text/css" href="http://nvie.com/wp-content/themes/librio/ie.css" media="screen" /><![endif]-->
	
	<link rel="alternate" type="application/rss+xml" title="nvie.com &raquo; Automatically generate classes for your Core Data data model Comments Feed" href="http://nvie.com/archives/263/feed" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://nvie.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://nvie.com/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='nvie.com' href='http://nvie.com' />
<link rel='start' title='NSPredicateEditor tutorial' href='http://nvie.com/archives/197' />
<link rel='prev' title='NSManagedObjectContext extensions' href='http://nvie.com/archives/243' />
<link rel='next' title='Auto-generate classes for your Core Data data model, revisited' href='http://nvie.com/archives/310' />
<meta name="generator" content="WordPress 3.0" />
<link rel='canonical' href='http://nvie.com/archives/263' />
<link rel='shortlink' href='http://nvie.com/?p=263' />

<!-- tracker added by Ultimate Google Analytics plugin v1.6.0: http://www.oratransplant.nl/uga -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-7780973-1");
pageTracker._initData();
pageTracker._trackPageview();
</script>

<link rel="stylesheet" href="http://nvie.com/wp-content/plugins/wp-syntax/wp-syntax.css" type="text/css" media="screen" />
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
</head>

<body>

<div id="container">

	<div id="header">
		<h1><a href="http://nvie.com/">nvie.com</a><span>Anything that interests me.</span></h1>
		<div id="search">
			<form method="get" id="searchform" action="http://nvie.com/">
				<input type="text" value="Search" name="s" id="s" onfocus="if(this.value=='Search')this.value=''" onblur="if(this.value=='')this.value='Search'" />
			</form>
		</div>
	</div>

	<div id="nav">
		<ul>
			<li class="current_page_item"><a href="http://nvie.com/">Home</a></li>
			<li class="page_item page-item-8"><a href="http://nvie.com/about" title="About">About</a></li>
		</ul>
		<a href="http://nvie.com/feed" id="feed">Subscribe</a>
	</div>
	
	<div id="wrapper">

<div id="content">

	
		<div class="post" id="post-263">
			<h1 class="post-title">Automatically generate classes for your Core Data data model</h1>

			<p>When designing a Core Data data model for your Xcode projects, you can choose to create Objective-C object wrappers for your entities, so that you can profit from type-safe code. The normal, tedious, workflow for this is that you select each entity from the model designer, select all of its attributes and relationships, Ctrl-click it and from the contextual menu first select &#8220;Copy Obj-C 2.0 Method Declarations To Clipboard&#8221;, paste it into the appropriate class header file, then do the same thing for the method implementations in the class implementation file. Waaaaaay too much work. Not to mention the manual copy-pastes are really hard to keep in sync once you start adding functionality to these class files, since you don&#8217;t want to overwrite those additions, but you want to keep replacing everything else.</p>
<h3>Meet mogenerator</h3>
<p>Fortunately, there is a great way for automating this process, using mogenerator. The tool can be downloaded as a <a onclick="javascript:pageTracker._trackPageview('/outgoing/aralbalkan.com/2152');"  href="http://aralbalkan.com/2152">DMG installer</a> (Aral Balkan&#8217;s blog mentions a workaround for older Xcode versions, but for Xcode 3.1.3 it worked out of the box for me), or you can checkout the sources from <a onclick="javascript:pageTracker._trackPageview('/outgoing/github.com/rentzsch/mogenerator/');"  href="http://github.com/rentzsch/mogenerator/">github</a> and build it yourself.</p>
<p>The mogenerator command line tool eases this generation process by reading the *.xcdatamodel file and generating both class files and intermediate class files for each entity. The intermediate classes (called <em>machine</em> classes) are continuously overwritten by subsequent regenerations, so you should never edit the contents of these files. The actual model object classes (called <em>human</em> classes) inherit from those intermediate classes with a default empty implementation, allowing for all manual extensions.</p>
<p>For example, when you design a model with two entities Foo and Bar, mogenerator can be invokes as follows:</p>
<pre>mogenerator -m MyDocument.xcdatamodel -M Entities -H Model</pre>
<p>The flag -m sets the input model file, while -M and -H specify the output directories where the machine and human classes should be generated respectively.</p>
<p>This does a few things:</p>
<ul>
<li>In the Entities subdirectory, there will be generated header and implementation files for NSManagedObject subclasses called _Foo and _Bar;</li>
<li>In the Model subdirectory, there will be generated classes called Foo and Bar—respective subclasses of _Foo and _Bar. These are only created if not available yet. Otherwise, they are left as is.</li>
</ul>
<h3>Wrapping it up</h3>
<p>The trick of how mogenerator works is that you can run the script as often as you want. After every change in your model, you&#8217;ll want to re-run the generation again to update the machine classes. You could easily leave Xcode, switch over to Terminal and issue the command above. But you&#8217;ll get quite tired of that after a few times.</p>
<p>Therefore, I&#8217;ve written a custom user script that can be added to Xcode (see figure), which does the following:</p>
<ul>
<li>You can configure the output directories in the first lines of the script. There is no per-project configuration, so choose them as you would like to use them with all your projects;</li>
<li>Mind that these generated files are not automatically included in your Xcode project. Drag them there once and ideally put the machine generated classes into a group under &#8220;Other resource&#8221;, so you never have to see them again. Whenever you add a new class to your model, new files will be generated, so again you must drag the new files to reference those, of course!</li>
<li>The script can be run with any file in the project opened. It starts out with that file and walks up the directory tree to search for your Xcode project. If found, it executes all the rest from your project directory. (Suggestions are welcome, I could not find a better implementation since a variable like %%%{PBXProjectPath}%%% does not seem to exist.)</li>
<li>It invokes mogenerator to generate all model classes for the project. It is smart enough to detect whether you are using Brian Webster&#8217;s <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.fatcatsoftware.com/blog/2008/per-object-ordered-relationships-using-core-data');"  href="http://www.fatcatsoftware.com/blog/2008/per-object-ordered-relationships-using-core-data">BWOrderedManagedObject</a> in your project. If so, your generated machine classes will inherit from BWOrderedManagedObject instead of NSManagedObject.</li>
</ul>
<p><a onclick="javascript:pageTracker._trackPageview('/wp-content/uploads/wp-content/uploads/2009/07/set-user-script.png');"  href="http://nvie.com/wp-content/uploads/2009/07/set-user-script.png"><img class="alignnone size-medium wp-image-291" title="Edit user script window" src="http://nvie.com/wp-content/uploads/2009/07/set-user-script-300x211.png" alt="Edit user script window" width="300" height="211" /></a></p>
<p>To add this script to Xcode, open the menu Scripts (the icon) &gt; Edit User Scripts&#8230; Click the &#8220;+&#8221;-button on the bottom-left and select &#8220;New shell script&#8221;. Set the values for Input, Directory, Output and Errors as in the screenshot above, then copy-paste the script below into the code window. Add a nice keyboard shortcut to this action to top it off :-) I&#8217;ve chosen ^⌥⌘G for this.</p>
<p>Please feel free to leave any comments if this helped you.</p>

<div class="wp_syntax"><div class="code"><pre class="sh" style="font-family:monospace;">#!/bin/sh
#
# Automatic (re)generation of model classes for all *.xcdatamodel files.
# Written by Vincent Driessen
#
# You are free to use this script in any way.
# The original blog post is http://nvie.com/archives/263
#
&nbsp;
# Define output directories
MACHINE_DIR=&quot;Entities&quot;
MODEL_DIR=&quot;Model&quot;
&nbsp;
# Look for the Xcode project directory for this file
cd `dirname &quot;%%%{PBXFilePath}%%%&quot;`
while [ `ls -d *.xcodeproj 2&amp;gt;/dev/null | wc -l` -eq 0 ]; do
    cd ..
    if [ &quot;`pwd`&quot; = &quot;/&quot; ]; then
        echo &quot;No Xcode project found.&quot;
        exit 1
    fi
done
&nbsp;
echo &quot;Project directory is `pwd`&quot;
&nbsp;
#
# Check to see whether the base class is just a default (NSManagedObject) or maybe
# Brian Webster's excellent BWOrderedManagedObject.
# http://www.fatcatsoftware.com/blog/2008/per-object-ordered-relationships-using-core-data
#
# NOTE:
# The check really is quite arbitrary: if there exists a file called BWOrderedManagedObject.h
# somewhere below the project root directory, we assume that we want to use this as the base
# class for all generated classes.
#
EXTRA_FLAGS=
if [ `find . -name BWOrderedManagedObject.h | wc -l` -gt 0 ]; then
	EXTRA_FLAGS+=&quot;--base-class BWOrderedManagedObject&quot;
fi
&nbsp;
# Generate the model classes using mogenerator
for model in `find . -name '*.xcdatamodel'`; do
	# The output directories have to exist, so create them
    mkdir -p &quot;${MACHINE_DIR}&quot; &quot;${MODEL_DIR}&quot;
    mogenerator ${EXTRA_FLAGS} -m &quot;${model}&quot; -M &quot;${MACHINE_DIR}&quot; -H &quot;${MODEL_DIR}&quot;
done</pre></div></div>


						
			<div class="post-info">
				July 30th, 2009 in
				<a href="http://nvie.com/archives/category/core-data" title="View all posts in Core Data" rel="category tag">Core Data</a>, <a href="http://nvie.com/archives/category/objective-c" title="View all posts in Objective-C" rel="category tag">Objective-C</a>, <a href="http://nvie.com/archives/category/user-scripts" title="View all posts in User scripts" rel="category tag">User scripts</a>, <a href="http://nvie.com/archives/category/xcode" title="View all posts in Xcode" rel="category tag">Xcode</a>, <a href="http://nvie.com/archives/category/mogenerator" title="View all posts in mogenerator" rel="category tag">mogenerator</a>											</div>
		</div>

		

	<h1 class="comments-title">5 Comments</h1>

	<div id="comments">

					<div class="comment" id="comment-7">
			
				<div class="comment-avatar">
					<img alt='' src='http://1.gravatar.com/avatar/1feef2a82bdc1788e42b7b23f143db0e?s=50&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D50&amp;r=G' class='avatar avatar-50 photo' height='50' width='50' />				</div>
				
				<div class="comment-content">
					<div class="comment-info"><span><a onclick="javascript:pageTracker._trackPageview('/outgoing/carpeaqua.com');"  href='http://carpeaqua.com' rel='external nofollow' class='url'>Justin Williams</a></span>August 2nd, 2009 at 14:39 </div>
					
					
					<p>Great tutorial. I&#8217;ve seen mogenerator for a while, but never bothered to try it out. Thanks for giving me the nudge to finally do it!</p>
				</div>
			</div>
					<div class="comment" id="comment-9">
			
				<div class="comment-avatar">
					<img alt='' src='http://0.gravatar.com/avatar/26974b00b11c99ca84f737b22fad32f2?s=50&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D50&amp;r=G' class='avatar avatar-50 photo' height='50' width='50' />				</div>
				
				<div class="comment-content">
					<div class="comment-info"><span>Julian</span>August 6th, 2009 at 22:12 </div>
					
					
					<p>What about: select model, File/New File&#8230;, select &#8220;Managed Object Class&#8221;, and then checking the entities you want classes for?<br />
The &#8220;Copy xyz declarations&#8221; thing is not really the way it&#8217;s supposed to be done, just a quick method if you changed a single attribute. </p>
<p>But I think that the method described above is a bit hard to find out&#8230;</p>
				</div>
			</div>
					<div class="comment" id="comment-11">
			
				<div class="comment-avatar">
					<img alt='' src='http://0.gravatar.com/avatar/c5a7f21b46df698f3db31c37ed0cf55a?s=50&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D50&amp;r=G' class='avatar avatar-50 photo' height='50' width='50' />				</div>
				
				<div class="comment-content">
					<div class="comment-info"><span><a href='http://nvie.com' rel='external nofollow' class='url'>Vincent Driessen</a></span>August 7th, 2009 at 14:59 </div>
					
					
					<p>@Julian: Well, well. Seems like I&#8217;ve been late to the party :) Is that a new feature in Xcode 3.1?</p>
				</div>
			</div>
					<div class="comment" id="comment-156">
			
				<div class="comment-avatar">
					<img alt='' src='http://0.gravatar.com/avatar/6bbd3aedd191f6b70e0cf5e9138521da?s=50&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D50&amp;r=G' class='avatar avatar-50 photo' height='50' width='50' />				</div>
				
				<div class="comment-content">
					<div class="comment-info"><span><a onclick="javascript:pageTracker._trackPageview('/outgoing/twitter.com/ludovic');"  href='http://twitter.com/ludovic' rel='external nofollow' class='url'>Ludovic</a></span>January 17th, 2010 at 12:10 </div>
					
					
					<p>Actually there&#8217;s a built-in feature in Xcode for generating your managed object classes. You just have to select an entity on your graph, click on &#8220;New File&#8221;, in the category &#8220;Cocoa Class&#8221;, select &#8220;Managed Object Class&#8221;, and have fun :-).</p>
				</div>
			</div>
					<div class="comment" id="comment-157">
			
				<div class="comment-avatar">
					<img alt='' src='http://0.gravatar.com/avatar/c5a7f21b46df698f3db31c37ed0cf55a?s=50&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D50&amp;r=G' class='avatar avatar-50 photo' height='50' width='50' />				</div>
				
				<div class="comment-content">
					<div class="comment-info"><span><a href='http://nvie.com' rel='external nofollow' class='url'>Vincent Driessen</a></span>January 17th, 2010 at 13:18 </div>
					
					
					<p>@Ludovic: Actually, this is meant to repeatedly have changes to your model show up in your classes, and without overriding custom fields/methods you&#8217;ve added yourself to those classes.</p>
				</div>
			</div>
		
	</div>





	<h1 class="comments-title">Leave a comment</h1>

			<form action="http://nvie.com/wp-comments-post.php" method="post" id="commentform">
			Your comment
			<p><textarea name="comment" id="comment"></textarea></p>
			
						
				<p><input type="text" name="author" id="author" class="text" value="" />
				<label for="author">Name (required)</label></p>

				<p><input type="text" name="email" id="email" class="text" value="" />
				<label for="email">Mail (will not be published) (required)</label></p>

				<p><input type="text" name="url" id="url" class="text" value="" />
				<label for="url">Website</label></p>
						
						
			<p><input name="submit" type="submit" id="submit" value="Submit Comment" /><input type="hidden" name="comment_post_ID" value="263" /></p>
			
			

		</form>



	
</div>

<div id="sidebar">
<div class="block"><h3 class="widgettitle">Author</h3>			<div class="textwidget"><p>Vincent Driessen is a Python and Cocoa enthusiast based in The Netherlands.</p>
<p>Follow me on Twitter (<a href="https://twitter.com/nvie/">@nvie</a>).</p>
<p><img src="http://nvie.com/wp-content/themes/librio/images/vin.png" alt="Author" style="margin: 0 0 0 0; width: 170px; padding: 0;" /></p>
</div>
		</div><div class="block"><h3 class="widgettitle">Categories</h3>		<ul>
	<li class="cat-item cat-item-17"><a href="http://nvie.com/archives/category/core-data" title="View all posts filed under Core Data">Core Data</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://nvie.com/archives/category/general" title="View all posts filed under General">General</a>
</li>
	<li class="cat-item cat-item-23"><a href="http://nvie.com/archives/category/git" title="View all posts filed under Git">Git</a>
<ul class='children'>
	<li class="cat-item cat-item-25"><a href="http://nvie.com/archives/category/git/gitflow" title="View all posts filed under gitflow">gitflow</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-4"><a href="http://nvie.com/archives/category/iphone" title="View all posts filed under iPhone">iPhone</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://nvie.com/archives/category/mac" title="View all posts filed under Mac">Mac</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://nvie.com/archives/category/mogenerator" title="View all posts filed under mogenerator">mogenerator</a>
</li>
	<li class="cat-item cat-item-10"><a href="http://nvie.com/archives/category/objective-c" title="View all posts filed under Objective-C">Objective-C</a>
</li>
	<li class="cat-item cat-item-24"><a href="http://nvie.com/archives/category/python" title="Python">Python</a>
</li>
	<li class="cat-item cat-item-22"><a href="http://nvie.com/archives/category/user-scripts" title="View all posts filed under User scripts">User scripts</a>
</li>
	<li class="cat-item cat-item-21"><a href="http://nvie.com/archives/category/xcode" title="View all posts filed under Xcode">Xcode</a>
</li>
		</ul>
</div><div class="block"><h3 class="widgettitle">Archives</h3>		<ul>
			<li><a href='http://nvie.com/archives/date/2010/03' title='March 2010'>March 2010</a></li>
	<li><a href='http://nvie.com/archives/date/2010/01' title='January 2010'>January 2010</a></li>
	<li><a href='http://nvie.com/archives/date/2009/12' title='December 2009'>December 2009</a></li>
	<li><a href='http://nvie.com/archives/date/2009/10' title='October 2009'>October 2009</a></li>
	<li><a href='http://nvie.com/archives/date/2009/07' title='July 2009'>July 2009</a></li>
		</ul>
</div><div class="block"><h3 class="widgettitle">Recent Comments</h3><ul id="recentcomments"><li class="recentcomments"><a href='http://nvie.com' rel='external nofollow' class='url'>Vincent Driessen</a> on <a href="http://nvie.com/git-model/comment-page-2#comment-1892">A successful Git branching model</a></li><li class="recentcomments">A on <a href="http://nvie.com/archives/197/comment-page-1#comment-1890">NSPredicateEditor tutorial</a></li><li class="recentcomments"><a href='http://nvie.com' rel='external nofollow' class='url'>Vincent Driessen</a> on <a href="http://nvie.com/git-model/comment-page-2#comment-1884">A successful Git branching model</a></li><li class="recentcomments"><a onclick="javascript:pageTracker._trackPageview('/outgoing/webdev.zalewa.info');"  href='http://webdev.zalewa.info' rel='external nofollow' class='url'>zalun</a> on <a href="http://nvie.com/git-model/comment-page-2#comment-1883">A successful Git branching model</a></li><li class="recentcomments"><a onclick="javascript:pageTracker._trackPageview('/outgoing/codeslife.com');"  href='http://codeslife.com' rel='external nofollow' class='url'>Larry Cai</a> on <a href="http://nvie.com/git-model/comment-page-2#comment-1882">A successful Git branching model</a></li></ul></div></div>
	</div>
	
	<div id="footer">
		<p>
			Copyright &copy; 2008. All right reserved. 
			Theme by <a href="http://deniart.ru">deniart</a>
		</p>
	</div>
</div>

</body>
</html>