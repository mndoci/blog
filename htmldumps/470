<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">

<head profile="http://gmpg.org/xfn/11">
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	
	<title>nvie.com  &raquo; Blog Archive   &raquo; Unexpected side effects in Python classes</title>
	
	<link rel="alternate" type="application/rss+xml" title="nvie.com RSS Feed" href="http://nvie.com/feed" />
	<link rel="pingback" href="http://nvie.com/xmlrpc.php" />
	
	<link rel="stylesheet" href="http://nvie.com/wp-content/themes/librio/style.css" type="text/css" media="screen" />
	<!--[if IE]><link rel="stylesheet" type="text/css" href="http://nvie.com/wp-content/themes/librio/ie.css" media="screen" /><![endif]-->
	
	<link rel="alternate" type="application/rss+xml" title="nvie.com &raquo; Unexpected side effects in Python classes Comments Feed" href="http://nvie.com/archives/470/feed" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://nvie.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://nvie.com/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='nvie.com' href='http://nvie.com' />
<link rel='start' title='NSPredicateEditor tutorial' href='http://nvie.com/archives/197' />
<link rel='prev' title='gitflow 0.1 released' href='http://nvie.com/archives/438' />
<link rel='next' title='An upgrade of gitflow' href='http://nvie.com/archives/492' />
<meta name="generator" content="WordPress 3.0" />
<link rel='canonical' href='http://nvie.com/archives/470' />
<link rel='shortlink' href='http://nvie.com/?p=470' />

<!-- tracker added by Ultimate Google Analytics plugin v1.6.0: http://www.oratransplant.nl/uga -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-7780973-1");
pageTracker._initData();
pageTracker._trackPageview();
</script>

<link rel="stylesheet" href="http://nvie.com/wp-content/plugins/wp-syntax/wp-syntax.css" type="text/css" media="screen" />
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
</head>

<body>

<div id="container">

	<div id="header">
		<h1><a href="http://nvie.com/">nvie.com</a><span>Anything that interests me.</span></h1>
		<div id="search">
			<form method="get" id="searchform" action="http://nvie.com/">
				<input type="text" value="Search" name="s" id="s" onfocus="if(this.value=='Search')this.value=''" onblur="if(this.value=='')this.value='Search'" />
			</form>
		</div>
	</div>

	<div id="nav">
		<ul>
			<li class="current_page_item"><a href="http://nvie.com/">Home</a></li>
			<li class="page_item page-item-8"><a href="http://nvie.com/about" title="About">About</a></li>
		</ul>
		<a href="http://nvie.com/feed" id="feed">Subscribe</a>
	</div>
	
	<div id="wrapper">

<div id="content">

	
		<div class="post" id="post-470">
			<h1 class="post-title">Unexpected side effects in Python classes</h1>

			<p>Today, I lost several hours while debugging a language implementation detail in Python that I did not know of and that really feels counterintuitive and dangerous to me.</p>
<p>I was writing unit tests for a Python class that I was implementing, when one of the tests that had repeatedly been passing suddenly failed. Moreover, the failing test case was really for testing some completely unrelated piece of functionaly. This simply could not be broken!</p>
<p>After at least an hour of scrutinizing the code, I was able to distill the real problem, which I think is summarized here in the most compact way:<br />
<script src="http://gist.github.com/321150.js"></script><br />
Creating a simple <code>Foo</code> instance twice exposes the ugly side effect: the second <code>Foo</code> instance has an already initialized <code>x</code> instance variable when the constructor enters! Yuck! Moreover, now, too:</p>
<script src="http://gist.github.com/321155.js"></script>
<p>Apparently, the <code>x</code> &#8220;instance variable&#8221; is a shared object, much like a global or class variable.</p>
<p>To be even more confusing, this doesn&#8217;t seem to hold for basic data types. For example, change the dictionary to an integer, and the example behaves as expected:</p>
<script src="http://gist.github.com/321157.js"></script>
<h2>The behaviour demystified</h2>
<p>The real confusion here is that I was thinking that I was creating &#8220;instance variables&#8221;, like you would in C++ or Java. As the <a onclick="javascript:pageTracker._trackPageview('/outgoing/docs.python.org/tutorial/classes.html#instance-objects');"  href="http://docs.python.org/tutorial/classes.html#instance-objects">Python documentation</a> mentions:</p>
<blockquote><p>&#8220;data attributes correspond to [...] to data members in C++. Data attributes need not be declared; like local variables, they spring into existence when they are first assigned to.&#8221;</p></blockquote>
<p>Yes, I knew that, but nonetheless my real-world class is much bigger than <code>Foo</code> and I wanted an explicit overview on which instance variables are in this class. Hence the data member.</p>
<p>However, this is not how the Python interpreter processes Python code. In fact, upon class definition, the statement <code>x = {}</code> is executed within the scope of the newly defined class. To prove this:</p>
<script src="http://gist.github.com/321158.js"></script>
<p>Even without a constructor or instance variable, we can access the data member <code>x</code>. Of course. Now this suddenly seems obvious.</p>
<p>But what about our instance variables? Apparently, when we create a new instance of <code>Bar</code>, the instance data member <code>x</code> is initially <em>pointing to the same object</em> as the class data member <code>x</code>. The following example proves this:</p>
<script src="http://gist.github.com/321172.js"></script>
<p>This example also demonstrates the subtlety of the accidentally discovered side-effect. Remember how we were changing the dictionary in our initial example? <code>self.x[id] = id</code><br />
The instance data member was pointing to the same object as the class data member. By updating the dictionary, the single dictionary object was changed, causing unwanted side effects in other class instances.</p>
<p>In the gist above, we force <code>x</code> to point to a new dictionary by the assignment <code>self.x = { id:id }</code>. In other words, <code>x</code> points to a new object! This also perfectly explains why the integer example workedâ€”it&#8217;s the same kind of assignment.</p>
<h2>Conclusion</h2>
<p>To summarize, I learned some important lessons today:</p>
<ul>
<li>All the time, I have been creating class data members in all my classes, without knowing this.</li>
<li>I initialized those members to default values, effectively creating useless objects that are never accessed and just claiming memory.</li>
<li>Although it can be explained, a seemingly innocent statement like <code>x = {}</code> can have very ugly side effects. Be warned!</li>
<li>Never underestimate the power of unit tests. It is absolutely worth the investment.</li>
</ul>

						
			<div class="post-info">
				March 3rd, 2010 in
				<a href="http://nvie.com/archives/category/python" title="View all posts in Python" rel="category tag">Python</a>											</div>
		</div>

		

	<h1 class="comments-title">1 Comment</h1>

	<div id="comments">

					<div class="comment" id="comment-592">
			
				<div class="comment-avatar">
					<img alt='' src='http://0.gravatar.com/avatar/4d73d92d1e35b86c5c45667b7a036da3?s=50&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D50&amp;r=G' class='avatar avatar-50 photo' height='50' width='50' />				</div>
				
				<div class="comment-content">
					<div class="comment-info"><span><a onclick="javascript:pageTracker._trackPageview('/outgoing/ruslanspivak.com');"  href='http://ruslanspivak.com' rel='external nofollow' class='url'>Ruslan Spivak</a></span>March 21st, 2010 at 03:37 </div>
					
					
					<p>On a somewhat related note about mutable objects &#8211; many people new to Python are also caught off guard by the side effect of using a mutable object as a default parameter in a function/method definition:</p>
<p>&gt;&gt;&gt; def get_props(proplist=[]):<br />
&#8230;          proplist.append(&#8216;port=777&#8242;)<br />
&#8230;          return proplist<br />
&#8230;<br />
&gt;&gt;&gt; get_props()<br />
['port=777']</p>
<p>&gt;&gt;&gt; get_props()<br />
['port=777', 'port=777']</p>
<p>&gt;&gt;&gt; get_props()<br />
['port=777', 'port=777', 'port=777']</p>
<p>The problem here is that the default parameter value is evaluated once when the function definition is executed. So basically all later modifications of that parameter modify the default mutable object.</p>
<p>You can find more about that behavior at:<br />
<a onclick="javascript:pageTracker._trackPageview('/outgoing/docs.python.org/reference/compound_stmts.html#function-definitions');"  href="http://docs.python.org/reference/compound_stmts.html#function-definitions" rel="nofollow">http://docs.python.org/reference/compound_stmts.html#function-definitions</a></p>
				</div>
			</div>
		
	</div>





	<h1 class="comments-title">Leave a comment</h1>

			<form action="http://nvie.com/wp-comments-post.php" method="post" id="commentform">
			Your comment
			<p><textarea name="comment" id="comment"></textarea></p>
			
						
				<p><input type="text" name="author" id="author" class="text" value="" />
				<label for="author">Name (required)</label></p>

				<p><input type="text" name="email" id="email" class="text" value="" />
				<label for="email">Mail (will not be published) (required)</label></p>

				<p><input type="text" name="url" id="url" class="text" value="" />
				<label for="url">Website</label></p>
						
						
			<p><input name="submit" type="submit" id="submit" value="Submit Comment" /><input type="hidden" name="comment_post_ID" value="470" /></p>
			
			

		</form>



	
</div>

<div id="sidebar">
<div class="block"><h3 class="widgettitle">Author</h3>			<div class="textwidget"><p>Vincent Driessen is a Python and Cocoa enthusiast based in The Netherlands.</p>
<p>Follow me on Twitter (<a href="https://twitter.com/nvie/">@nvie</a>).</p>
<p><img src="http://nvie.com/wp-content/themes/librio/images/vin.png" alt="Author" style="margin: 0 0 0 0; width: 170px; padding: 0;" /></p>
</div>
		</div><div class="block"><h3 class="widgettitle">Categories</h3>		<ul>
	<li class="cat-item cat-item-17"><a href="http://nvie.com/archives/category/core-data" title="View all posts filed under Core Data">Core Data</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://nvie.com/archives/category/general" title="View all posts filed under General">General</a>
</li>
	<li class="cat-item cat-item-23"><a href="http://nvie.com/archives/category/git" title="View all posts filed under Git">Git</a>
<ul class='children'>
	<li class="cat-item cat-item-25"><a href="http://nvie.com/archives/category/git/gitflow" title="View all posts filed under gitflow">gitflow</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-4"><a href="http://nvie.com/archives/category/iphone" title="View all posts filed under iPhone">iPhone</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://nvie.com/archives/category/mac" title="View all posts filed under Mac">Mac</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://nvie.com/archives/category/mogenerator" title="View all posts filed under mogenerator">mogenerator</a>
</li>
	<li class="cat-item cat-item-10"><a href="http://nvie.com/archives/category/objective-c" title="View all posts filed under Objective-C">Objective-C</a>
</li>
	<li class="cat-item cat-item-24"><a href="http://nvie.com/archives/category/python" title="Python">Python</a>
</li>
	<li class="cat-item cat-item-22"><a href="http://nvie.com/archives/category/user-scripts" title="View all posts filed under User scripts">User scripts</a>
</li>
	<li class="cat-item cat-item-21"><a href="http://nvie.com/archives/category/xcode" title="View all posts filed under Xcode">Xcode</a>
</li>
		</ul>
</div><div class="block"><h3 class="widgettitle">Archives</h3>		<ul>
			<li><a href='http://nvie.com/archives/date/2010/03' title='March 2010'>March 2010</a></li>
	<li><a href='http://nvie.com/archives/date/2010/01' title='January 2010'>January 2010</a></li>
	<li><a href='http://nvie.com/archives/date/2009/12' title='December 2009'>December 2009</a></li>
	<li><a href='http://nvie.com/archives/date/2009/10' title='October 2009'>October 2009</a></li>
	<li><a href='http://nvie.com/archives/date/2009/07' title='July 2009'>July 2009</a></li>
		</ul>
</div><div class="block"><h3 class="widgettitle">Recent Comments</h3><ul id="recentcomments"><li class="recentcomments"><a href='http://nvie.com' rel='external nofollow' class='url'>Vincent Driessen</a> on <a href="http://nvie.com/git-model/comment-page-2#comment-1892">A successful Git branching model</a></li><li class="recentcomments">A on <a href="http://nvie.com/archives/197/comment-page-1#comment-1890">NSPredicateEditor tutorial</a></li><li class="recentcomments"><a href='http://nvie.com' rel='external nofollow' class='url'>Vincent Driessen</a> on <a href="http://nvie.com/git-model/comment-page-2#comment-1884">A successful Git branching model</a></li><li class="recentcomments"><a onclick="javascript:pageTracker._trackPageview('/outgoing/webdev.zalewa.info');"  href='http://webdev.zalewa.info' rel='external nofollow' class='url'>zalun</a> on <a href="http://nvie.com/git-model/comment-page-2#comment-1883">A successful Git branching model</a></li><li class="recentcomments"><a onclick="javascript:pageTracker._trackPageview('/outgoing/codeslife.com');"  href='http://codeslife.com' rel='external nofollow' class='url'>Larry Cai</a> on <a href="http://nvie.com/git-model/comment-page-2#comment-1882">A successful Git branching model</a></li></ul></div></div>
	</div>
	
	<div id="footer">
		<p>
			Copyright &copy; 2008. All right reserved. 
			Theme by <a href="http://deniart.ru">deniart</a>
		</p>
	</div>
</div>

</body>
</html>